                              ━━━━━━━━━━━
                               RUBY MATH
                              ━━━━━━━━━━━

Table of Contents
─────────────────

1 round
2 Some Math Tricks
3 Classes

1 round
═══════

  Ruby `Float` type has a `round` method that can either round to the
  nearest integer or round to a specific number of decimal places, in
  which case, `round` takes an argument.

  ┌────
  │ 5.34.round
  │ # --> 5
  │
  │ 5.5.round
  │ # --> 6
  │
  │ 7.1234.round(3)
  │ # --> 7.123
  │
  │ 7.1234(1)
  │ # --> 7.1
  └────

2 Some Math Tricks
══════════════════

  Lest common multiple:

  ┌────
  │ p 4.lcm(3)
  │ # --> 12
  │
  │ p 12.lcm(9)
  │ # --> 36
  └────

  Sum of the absolute values of two numbers:

  ┌────
  │ -5.abs.+(-3.abs)
  │ # --> 8
  └────

  Return the negative of a number:

  ┌────
  │ def negative(num)
  │   return num if num.negative?
  │   return num * -1
  │ end
  │
  │ negative(0)
  │ # --> 0
  │
  │ negative(-1)
  │ # --> -1
  │
  │ negative(1)
  │ # --> -3
  └────

  Get the last digit of a number:

  ┌────
  │ def last_digit(num)
  │   num % 10
  │ end
  │
  │ last_digit(0)
  │ # --> 0
  │
  │ last_digit(1)
  │ # --> 1
  │
  │ last_digit(1234)
  │ # --> 4
  │
  │ last_digit(1234567)
  │ # --> 7
  └────

  A method that takes `num` and `n` and returns the last `n` digits from
  `num`:

  ┌────
  │ # ASSUME: neither arg is zero.
  │ def last_n_digits(num, n)
  │   num % (10 ** n)
  │ end
  │
  │ last_n_digits(235, 1)
  │ # --> 5
  │
  │ last_n_digits(235, 2)
  │ # --> 35
  └────

  The decimal remainder is the right side of the decimal point of a
  number.

  ┌────
  │ def dec_remainder_of_two_floats(f_dividend, f_divisor)
  │   # Divide normally.
  │   quotient = f_dividend / f_divisor
  │
  │   # Extract the decimal remainder.
  │   (quotient - quotient.to_i).round(1)
  │ end
  │
  │ dec_rem_two_floats(5.3, 2.1)
  │ # --> 0.5, because 5.3 / 2.1 is 2.5.
  └────

  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
   id  name            email
    1  Yoda            yoda@theforce.io
    2  Luke Skywalker  luke@padawans.net
  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ┌────
  │ [10, 20, 30.each do |num|
  │   puts "--> #{num}"
  │ end
  └────

3 Classes
═════════

  Vamos estudar uma classe em Ruby.

  ┌────
  │ class Person
  │   attr_accessor :name, :email
  │
  │   def initialize(name, email)
  │     @name = name
  │     @email = email
  │   end
  │ end
  │
  │ person = Person.new('Felipe', 'felipe@counterstrike.io')
  │ p person.name
  │ p person.email
  └────
